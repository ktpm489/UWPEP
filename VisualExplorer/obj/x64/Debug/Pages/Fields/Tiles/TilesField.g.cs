#pragma checksum "E:\Visual Studio Workspace\UWP\VisualExplorer\VisualExplorer\Pages\Fields\Tiles\TilesField.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "73F0274260B0E0F3D6925B703AAD934C"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VisualExplorer.Pages.Fields.Tiles
{
    partial class TilesField : 
        global::VisualExplorer.Pages.Base.BaseField, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_FrameworkElement_RequestedTheme(global::Windows.UI.Xaml.FrameworkElement obj, global::Windows.UI.Xaml.ElementTheme value)
            {
                obj.RequestedTheme = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_Toolkit_Uwp_UI_Controls_AdaptiveGridView_ItemHeight(global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj, global::System.Double value)
            {
                obj.ItemHeight = value;
            }
            public static void Set_Microsoft_Toolkit_Uwp_UI_Controls_AdaptiveGridView_DesiredWidth(global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj, global::System.Double value)
            {
                obj.DesiredWidth = value;
            }
        };

        private class TilesField_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ITilesField_Bindings
        {
            private global::VisualExplorer.Pages.Fields.Tiles.TilesField dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::System.WeakReference obj1;
            private global::VisualExplorer.Pages.Fields.Tiles.TilesFieldView obj8;

            private TilesField_obj1_BindingsTracking bindingsTracking;

            public TilesField_obj1_Bindings()
            {
                this.bindingsTracking = new TilesField_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 1:
                        this.obj1 = new global::System.WeakReference((global::VisualExplorer.Pages.Base.BaseField)target);
                        break;
                    case 8:
                        this.obj8 = (global::VisualExplorer.Pages.Fields.Tiles.TilesFieldView)target;
                        break;
                    default:
                        break;
                }
            }

            // ITilesField_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // TilesField_obj1_Bindings

            public void SetDataRoot(global::VisualExplorer.Pages.Fields.Tiles.TilesField newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::VisualExplorer.Pages.Fields.Tiles.TilesField obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_themeAgency(obj.themeAgency, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_entries(obj.entries, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_viewFixer(obj.viewFixer, phase);
                    }
                }
            }
            private void Update_themeAgency(global::VisualExplorer.Model.Theme.ThemeAgency obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_themeAgency(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_themeAgency_AppTheme(obj.AppTheme, phase);
                    }
                }
            }
            private void Update_themeAgency_AppTheme(global::Windows.UI.Xaml.ElementTheme obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_RequestedTheme(this.obj1.Target as global::VisualExplorer.Pages.Base.BaseField, obj);
                }
            }
            private void Update_entries(global::System.Collections.ObjectModel.ObservableCollection<global::VisualExplorer.Model.Storage.StorageEntry> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj8, obj, null);
                }
            }
            private void Update_viewFixer(global::VisualExplorer.Model.ViewFixer.TilesFieldFixer obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_viewFixer(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_viewFixer_ItemHeight(obj.ItemHeight, phase);
                        this.Update_viewFixer_DesiredWidth(obj.DesiredWidth, phase);
                    }
                }
            }
            private void Update_viewFixer_ItemHeight(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_AdaptiveGridView_ItemHeight(this.obj8, obj);
                }
            }
            private void Update_viewFixer_DesiredWidth(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_AdaptiveGridView_DesiredWidth(this.obj8, obj);
                }
            }

            private class TilesField_obj1_BindingsTracking
            {
                global::System.WeakReference<TilesField_obj1_Bindings> WeakRefToBindingObj; 

                public TilesField_obj1_BindingsTracking(TilesField_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<TilesField_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_themeAgency(null);
                    UpdateChildListeners_viewFixer(null);
                }

                public void PropertyChanged_themeAgency(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    TilesField_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::VisualExplorer.Model.Theme.ThemeAgency obj = sender as global::VisualExplorer.Model.Theme.ThemeAgency;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_themeAgency_AppTheme(obj.AppTheme, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "AppTheme":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_themeAgency_AppTheme(obj.AppTheme, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::VisualExplorer.Model.Theme.ThemeAgency cache_themeAgency = null;
                public void UpdateChildListeners_themeAgency(global::VisualExplorer.Model.Theme.ThemeAgency obj)
                {
                    if (obj != cache_themeAgency)
                    {
                        if (cache_themeAgency != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_themeAgency).PropertyChanged -= PropertyChanged_themeAgency;
                            cache_themeAgency = null;
                        }
                        if (obj != null)
                        {
                            cache_themeAgency = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_themeAgency;
                        }
                    }
                }
                public void PropertyChanged_viewFixer(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    TilesField_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::VisualExplorer.Model.ViewFixer.TilesFieldFixer obj = sender as global::VisualExplorer.Model.ViewFixer.TilesFieldFixer;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_viewFixer_ItemHeight(obj.ItemHeight, DATA_CHANGED);
                                    bindings.Update_viewFixer_DesiredWidth(obj.DesiredWidth, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ItemHeight":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_viewFixer_ItemHeight(obj.ItemHeight, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DesiredWidth":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_viewFixer_DesiredWidth(obj.DesiredWidth, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::VisualExplorer.Model.ViewFixer.TilesFieldFixer cache_viewFixer = null;
                public void UpdateChildListeners_viewFixer(global::VisualExplorer.Model.ViewFixer.TilesFieldFixer obj)
                {
                    if (obj != cache_viewFixer)
                    {
                        if (cache_viewFixer != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_viewFixer).PropertyChanged -= PropertyChanged_viewFixer;
                            cache_viewFixer = null;
                        }
                        if (obj != null)
                        {
                            cache_viewFixer = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_viewFixer;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1:
                {
                    global::VisualExplorer.Pages.Base.BaseField element1 = (global::VisualExplorer.Pages.Base.BaseField)(target);
                    #line 14 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::VisualExplorer.Pages.Base.BaseField)element1).Loaded += this.Page_Loaded;
                    #line 15 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::VisualExplorer.Pages.Base.BaseField)element1).Unloaded += this.Page_Unloaded;
                    #line default
                }
                break;
            case 2:
                {
                    this.TileFlyoutName = (global::Windows.UI.Xaml.Controls.MenuFlyout)(target);
                }
                break;
            case 3:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element3 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 20 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element3).Click += this.TileFlyout_Clicked;
                    #line default
                }
                break;
            case 4:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element4 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 22 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element4).Click += this.TileFlyout_Clicked;
                    #line default
                }
                break;
            case 5:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element5 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 28 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element5).Click += this.TileFlyout_Clicked;
                    #line default
                }
                break;
            case 6:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element6 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 25 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element6).Click += this.TileFlyout_Clicked;
                    #line default
                }
                break;
            case 7:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element7 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 26 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element7).Click += this.TileFlyout_Clicked;
                    #line default
                }
                break;
            case 8:
                {
                    this.TilesView = (global::VisualExplorer.Pages.Fields.Tiles.TilesFieldView)(target);
                    #line 43 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::VisualExplorer.Pages.Fields.Tiles.TilesFieldView)this.TilesView).Drop += this.TilesView_Drop;
                    #line 43 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::VisualExplorer.Pages.Fields.Tiles.TilesFieldView)this.TilesView).DragOver += this.TilesView_DragOver;
                    #line 44 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::VisualExplorer.Pages.Fields.Tiles.TilesFieldView)this.TilesView).DragItemsStarting += this.TilesView_DragItemsStarting;
                    #line 45 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::VisualExplorer.Pages.Fields.Tiles.TilesFieldView)this.TilesView).RightTapped += this.TilesView_RightTapped;
                    #line 45 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::VisualExplorer.Pages.Fields.Tiles.TilesFieldView)this.TilesView).DoubleTapped += this.TilesView_DoubleTapped;
                    #line 46 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::VisualExplorer.Pages.Fields.Tiles.TilesFieldView)this.TilesView).SelectionChanged += this.TilesView_SelectionChanged;
                    #line default
                }
                break;
            case 9:
                {
                    this.PromptBar = (global::VisualExplorer.UI.Controls.UIFieldPromptBar)(target);
                }
                break;
            case 10:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element10 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 60 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element10).Click += this.ItemFlyout_Clicked;
                    #line default
                }
                break;
            case 11:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element11 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 61 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element11).Click += this.ItemFlyout_Clicked;
                    #line default
                }
                break;
            case 12:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element12 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 63 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element12).Click += this.ItemFlyout_Clicked;
                    #line default
                }
                break;
            case 13:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element13 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 64 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element13).Click += this.ItemFlyout_Clicked;
                    #line default
                }
                break;
            case 14:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element14 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 65 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element14).Click += this.ItemFlyout_Clicked;
                    #line default
                }
                break;
            case 15:
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element15 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    #line 67 "..\..\..\..\..\Pages\Fields\Tiles\TilesField.xaml"
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element15).Click += this.ItemFlyout_Clicked;
                    #line default
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::VisualExplorer.Pages.Base.BaseField element1 = (global::VisualExplorer.Pages.Base.BaseField)target;
                    TilesField_obj1_Bindings bindings = new TilesField_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

